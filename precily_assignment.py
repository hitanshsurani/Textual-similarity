# -*- coding: utf-8 -*-
"""Precily_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e7JLbLUkywjmZT7K3Zq5dXtZm9WXrjbL
"""

import tensorflow as tf
import pandas as pd
import tensorflow_hub as hub
module_url = "https://tfhub.dev/google/universal-sentence-encoder/4"
model = hub.load(module_url)
def embed(input):
  return model(input)

df = pd.read_csv("Precily_Text_Similarity.csv")

df.head()

df['text1'][0]

msg = [df['text1'][0], df['text2'][0]]
msg_embeddings = embed(msg)
msg_embeddings

type(msg_embeddings)

type(msg_embeddings[0])

type(tf.make_ndarray(tf.make_tensor_proto(msg_embeddings)))

a_np = tf.make_ndarray(tf.make_tensor_proto(msg_embeddings))

from numpy import dot
from numpy.linalg import norm

ans = []
for i in range(len(df)):
  msg = [df['text1'][i], df['text2'][i]]
  msg_embeddings = embed(msg)
  a = tf.make_ndarray(tf.make_tensor_proto(msg_embeddings))
  cos_sim = dot(a[0], a[1])/(norm(a[0])*norm(a[1]))
  ans.append(cos_sim)
ans

Result = pd.DataFrame(ans, columns = ['Similarity_Score'])

df = df.join(Result)

df['Similarity_Score'] = df['Similarity_Score'] + 1
df['Similarity_Score']

df['Similarity_Score'] = df['Similarity_Score']/df['Similarity_Score'].abs().max()
df['Similarity_Score']

df.head()

Final_result = df['Similarity_Score']

Final_result.head()

from google.colab import files
Final_result.to_csv('Final_result.csv')
files.download('Final_result.csv')

